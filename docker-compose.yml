version: "3.9"

services:
  api:
    image: node:22-bullseye
    working_dir: /app
    command: sh -lc "npm ci && npm run dev"
    volumes:
      - ./api:/app
      - ./shared:/shared
    environment:
      NODE_ENV: development
      PORT: 3000
      # Database
      DATABASE_URL: postgres://postgres:postgres@db:5432/app?sslmode=disable
      # Redis (BullMQ)
      REDIS_URL: redis://redis:6379/0
      # AWS S3
      AWS_REGION: ${AWS_REGION:-eu-central-1}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_PREFIX: ${S3_PREFIX:-uploads/}
      CLOUDFRONT_DOMAIN: ${CLOUDFRONT_DOMAIN:-}
      # Analyzer
      ANALYZER_BIN: /analyzer/venv/bin/analyzer
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis

  workers:
    image: node:22-bullseye
    working_dir: /app
    command: sh -lc "npm ci && node dist/worker.js"
    volumes:
      - ./workers:/app
      - ./shared:/shared
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@db:5432/app?sslmode=disable
      REDIS_URL: redis://redis:6379/0
      AWS_REGION: ${AWS_REGION:-eu-central-1}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_PREFIX: ${S3_PREFIX:-uploads/}
      CLOUDFRONT_DOMAIN: ${CLOUDFRONT_DOMAIN:-}
      ANALYZER_BIN: /analyzer/venv/bin/analyzer
    depends_on:
      - db
      - redis
      - analyzer

  analyzer:
    build:
      context: ./analyzer
      dockerfile: Dockerfile
    volumes:
      - ./analyzer:/analyzer
    environment:
      PYTHONUNBUFFERED: "1"

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:v2.55.1
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.3.0
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana:/var/lib/grafana

volumes:
  pgdata:
  grafana:
